DROP TABLE IF EXISTS TICKET;
CREATE TABLE TICKET (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    TITLE TEXT NOT NULL,
    PROBLEM TEXT NOT NULL ,
    CLIENT_ID INTEGER REFERENCES PERSON(UP) NOT NULL,
    STATUS TEXT DEFAULT 'OPEN',
    DEPARTMENT TEXT NOT NULL  REFERENCES DEPARTMENT(NAME) ON DELETE CASCADE ON UPDATE CASCADE,
    CREATED_AT DATETIME  DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (STATUS) REFERENCES STATUS(NAME)
);
DROP TABLE IF EXISTS PERSON;
CREATE TABLE PERSON (
    UP INTEGER PRIMARY KEY
    CONSTRAINT test_column_positive CHECK (UP > 0),
    EMAIL TEXT NOT NULL,
    NAME TEXT NOT NULL,
    PASSWORD TEXT NOT NULL,
    ROLE TEXT NOT NULL DEFAULT 'Student',
    IMG VARCHAR NOT NULL DEFAULT '/docs/images/default_pfp.png',
    CREATED_AT DATETIME  DEFAULT CURRENT_TIMESTAMP

);

DROP TABLE IF EXISTS DEPARTMENT;
CREATE TABLE DEPARTMENT (
    NAME TEXT PRIMARY KEY NOT NULL
);

DROP TABLE IF EXISTS TICKET_MESSAGE;
CREATE TABLE TICKET_MESSAGE (
    TEXT TEXT NOT NULL,
    TICKET_ID INTEGER REFERENCES TICKET(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    PERSON_ID INTEGER REFERENCES PERSON(UP) ON DELETE CASCADE ON UPDATE CASCADE,
    CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP
);


DROP TABLE IF EXISTS TICKET_AGENTS;
CREATE TABLE TICKET_AGENTS(
  TICKET_ID INTEGER REFERENCES TICKET(ID) ON DELETE CASCADE ON UPDATE CASCADE,
  AGENT_ID INTEGER REFERENCES PERSON(EMAIL) ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY (TICKET_ID, AGENT_ID)
);
DROP TABLE IF EXISTS WORKS_IN;
CREATE TABLE WORKS_IN (
    DEPARTMENT_ TEXT REFERENCES DEPARTMENT(NAME) ON DELETE CASCADE ON UPDATE CASCADE,
    CLIENT_ID INTEGER REFERENCES PERSON(UP) ON DELETE CASCADE ON UPDATE CASCADE
);
DROP TABLE IF EXISTS ASSIGN;
CREATE TABLE ASSIGN (
    UP INTEGER REFERENCES PERSON(UP) ON DELETE CASCADE ON UPDATE CASCADE,
    TICKET_ID INTEGER REFERENCES TICKET(ID) ON DELETE CASCADE ON UPDATE CASCADE
);
DROP TABLE IF EXISTS STATUS;
CREATE TABLE STATUS (
    NAME TEXT PRIMARY KEY
);
DROP TABLE IF EXISTS EVENT;
CREATE TABLE EVENT (
    EVENT_ID INTEGER PRIMARY KEY autoincrement ,
    DESCRIPTION TEXT NOT NULL,
    CLIENT_ID INTEGER REFERENCES PERSON(UP) ON DELETE CASCADE ON UPDATE CASCADE,
    TICKET_ID INTEGER REFERENCES TICKET(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CREATED_AT DATETIME  DEFAULT CURRENT_TIMESTAMP
);
DROP TABLE IF EXISTS FAQ;
CREATE TABLE FAQ (
    TITLE TEXT PRIMARY KEY ,
    TEXT TEXT NOT NULL
);
DROP TABLE IF EXISTS DOUBT;
CREATE TABLE DOUBT (
ID INTEGER PRIMARY KEY AUTOINCREMENT ,
TEXT TEXT NOT NULL
);

